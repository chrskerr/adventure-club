---
import { getCollection } from 'astro:content'
import 'leaflet/dist/leaflet.css'

import { MapDataProvider } from '@/lib/maps/data_provider'

const mapDataProvider = new MapDataProvider()
const trailsCollection = await getCollection('trails')
const serializedData = mapDataProvider.serializeData({ trailsCollection })

const { fullScreen = false } = Astro.props
---

<script>
  import { MapInstaller } from '@/lib/maps/installer'
  import { IconProvider } from '@/lib/maps/icon_provider'
  import { MapDataProvider } from '@/lib/maps/data_provider'
  import { MarkerProvider } from '@/lib/maps/marker_provider'
  import { PolylineProvider } from '@/lib/maps/polyline_provider'

  const trailsJson = document.getElementById('map')?.getAttribute('data-trails')
  if (trailsJson == null) {
    throw new Error('data-trails attribute not set')
  }

  const mapDataProvider = new MapDataProvider()
  const trailsData = mapDataProvider.deserializeData(trailsJson)

  const mapInstaller = new MapInstaller()
  const map = mapInstaller.installMap({ targetDivId: 'map' })

  const iconProvider = new IconProvider()
  const polylineProvider = new PolylineProvider()
  const markerProvider = new MarkerProvider(
    trailsData,
    map,
    iconProvider,
    polylineProvider
  )

  const markers = markerProvider.getMarkers()
  markers.forEach((marker) => marker.addTo(map))

  const bounds = markerProvider.getMarkerBounds()
  map.fitBounds(bounds)
</script>

<div
  id="map"
  data-trails={serializedData}
  class={fullScreen
    ? 'not-prose fixed inset-0 z-0 h-screen w-screen max-w-none m-0 p-0 border-none rounded-none'
    : 'rounded-base not-prose h-[500px] w-full max-w-[860px] mx-auto border-2 border-black'}
>
</div>
