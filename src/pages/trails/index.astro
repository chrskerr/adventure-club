---
import { getCollection } from 'astro:content'
import 'leaflet/dist/leaflet.css'

import Layout from '@/layouts/base.astro'
import type { TrailData } from './_types'

const allTrails = await getCollection('trails')

const trails = allTrails.map<TrailData>((trail) => ({
  id: trail.id,
  title: trail.data.title,
  startLatLng: trail.data.startLatLng,
}))
---

<script>
  import L from 'leaflet'
  import { MapCreator } from '@/lib/maps/create'
  import type { TrailData } from './_types'

  const mapDiv = document.getElementById('map')
  if (mapDiv == null) {
    throw new Error('Map div not found')
  }

  const trailsJson = mapDiv.getAttribute('data-trails')
  if (trailsJson == null) {
    throw new Error('data-trails attribute not set')
  }

  const trails = JSON.parse(trailsJson) as TrailData[]

  const mapCreator = new MapCreator()
  const map = mapCreator.createMap({ targetDivId: 'map' })

  let minLat = -Infinity
  let maxLat = Infinity
  let minLng = -Infinity
  let maxLng = Infinity

  for (const {
    id,
    title,
    startLatLng: [lat, lng],
  } of trails) {
    minLat = Math.max(minLat, lat)
    maxLat = Math.min(maxLat, lat)
    minLng = Math.max(minLng, lng)
    maxLng = Math.min(maxLng, lng)

    L.marker([lat, lng])
      .addTo(map)
      .bindPopup(`<a href="/trails/${id}">${title}</a>`)
  }

  map.fitBounds([
    [maxLat, maxLng],
    [minLat, minLng],
  ])
</script>

<Layout meta={{ title: 'All trails' }}>
  <div
    class="rounded-base -z-0 h-[500px] border-2 border-black"
    id="map"
    data-trails={JSON.stringify(trails)}
  >
  </div>
</Layout>
